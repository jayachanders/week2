# OpenAPI Specification version
swagger: "2.0"

# API description
info:
  version: 1.0.0
  title: Simple API
  description: A simple API to learn how to write OpenAPI Specification

# API URL
schemes:
  - https
host: simple.api
basePath: /openapi101

# API operations - Defining an operation -- comes in paths
paths:
  # Adding a path
  /persons:
    # Adding an http method on path
    get:
      summary: Gets some persons
      description: Returns a list containing all persons.
      # Defining query parameters 
      # Adding a parameters section to the get /persons operation
      # Followed by - - Adding paging query parameters
      parameters:
       - name: pageSize
         in: query
         description: Number of persons returned
         type: integer
       - name: pageNumber
         in: query
         description: Page number
         type: integer
      # Describing response - 200 is OK
      responses:
        200:
          description: A list of Person
          # Describing response’s content
          schema:
            type: array
            items:
              required:
                - username
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                username:
                  type: string
    post:
      summary: Creates a person
      description: Adds a new person to the persons list.
      parameters:
        - name: person
          in: body
          description: The person to create.
          schema:
            required:
              - username
            properties:
              firstName:
                type: string
              lastName:
                type: string
              username:
                type: string
      responses:
        204:
          description: Persons succesfully created.
        400:
          description: Persons couldn't have been created.
  # Defining a path parameter
  /persons/{username}:
    get:
      summary: Gets a person
      description: Returns a single person for its username
      parameters:
        - name: username
          in: path
          required: true
          description: The person's username
          type: string
      responses:
        200:
          description: A Person
          schema:
            required:
              - username
            properties:
              firstName:
                type: string
              lastName:
                type: string
              username:
                type: string
        404:
          description: The Person does not exists.

Person{
  firstName   string
  lastName    string
  username*    string
  pattern: [a-z0​-9​]{8,64}
  minLength: ​8
  maxLength: ​64
  dateOfBirth    string($date)
  lastTimeOnline    string($date-time)
}

Persons{
  items    [
    minItems: ​10
    maxItems: ​100
    uniqueItems: ​true
    Person{ [Jump to definition]
    firstName    string
    lastName    string
    username*    string
    pattern: [a-z0​-9​]{8,64}
    minLength: ​8
    maxLength: ​64
    dateOfBirth    string($date)
    lastTimeOnline    string($date-time)
  }]
}

Error{
  code*    string
  message*    string
}